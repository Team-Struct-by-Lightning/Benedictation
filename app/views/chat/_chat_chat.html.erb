///////////////////////////////////////////////////////////////////////////////
///////////////////////////////====CHAT====////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

// // variables for the chat box
//  var $sendButton = $("#js-send-button-im");
//  var $inputIM = $("#js-input-im");
// var $chatBody = $("#js-chat-body");
$sendButton.on('click', sendIM);


// click the send button when enter key is pressed
$inputIM.keydown(function (event) {
    var keypressed = event.keyCode || event.which;
    if (keypressed == 13) {
        $sendButton.click();
    }
});

var text_query_flag = 0;

 
// Set up the WebSocket connection to the NLP interpreter. 
var myLocation = location.host.split(":")[0];
var port = "8888";
var uri = "/recognize_test";
var websocketprotocol = "wss://";
if (location.protocol !== "https:") {
    websocketprotocol = "ws://";
    myLocation = myLocation.split(":")[0];
}

function waitForSocketConnection(socket, callback){
  setTimeout(
      function(){
          if (socket.readyState === 1) {
              if(callback !== undefined){
                  callback();
              }
              return;
          } else {
              waitForSocketConnection(socket,callback);
          }
      }, 5);
};

// With Turbolinks pages will change without a full reload, so you can't rely on the usual window.beforepageunload event. Instead Turbolinks fires events on document to provide hooks into the lifecycle of the page.
$(document).on("page:fetch", function() {
    console.log('turbolinks page fetch event');
});

// Send a new chat message to everyone else in the room.
function sendIM() {
    "<% current_user.refresh_token_if_expired %>"
    var message = $inputIM.val();
    var content = "<%= current_user.name %>" + "@@@" + "<%= current_user.uid %>" + "@@@" + "<%= current_user.oauth_token %>" + "@@@" + message;
    comm.send(content)
    // send to redis if you are the user that originally created this message
    var url_string = "https://www.googleapis.com/plus/v1/people/" + "<%= current_user.uid %>" + "?access_token=" + "<%= current_user.oauth_token %>";
    $.getJSON(url_string, function(user_object) {
        var message_string = "  <div class='media' id='chatty'>" + "    <div class='media-body' id='div-chat-message', style='text-align: " + "left" + "'>" + "      <h4 class='media-heading' id='h4-chat-message'>" + "<span class='chat-message'>" + "      <img class='media-object' id='prof-pic' align='left' src=" + user_object.image.url + ">" + "<a class='chat-user-name' href='#'>" + "<%= current_user.name %>" + "</a>: " + message + "</span></h4>" + "" + "    </div>" + "  </div>";
        var url = (icecomm_roomname).split("/");
        var id = String(url[url.length - 2]);
        var name = String(url[url.length - 1]);
        var key = name + ":" + id + ":chathistory";
        console.log("saving this to redis: ",key);
        $.ajax({
            type: "POST",
            url: "/update_redis",
            data: {
                redis_key: key,
                message: message_string
            }
        });
        // append what you send to your own page
        appendNewIM({
            data: content,
            callerID: "<%= current_user.name %>",
        });
    });
    $inputIM.val("");
}

function appendNewIM_text_only(message_string) {
    $chatBody.append(message_string);
    var height = 0;
    $('div, #chatty').each(function(i, value) {
            height += parseInt($(this).height());
        });
        height = height + 2;
        //var d = $('#chat-box');
        //d.scrollTop(d.prop("scrollHeight"));
        $chatBody.animate({
            scrollTop: height
        }, 'fast');
}

// stick new instant message onto the chat body
function appendNewIM(options) {
    console.log(options);
    var message_data = options.data.split("@@@");
    var caller_name = message_data[0];
    var caller_uid = message_data[1];
    var caller_token = message_data[2];
    message_data.reverse();
    message_data.pop();
    message_data.pop();
    message_data.pop();
    message_data.reverse();
    message_data.join("@@@");
    mediaObjectIM(caller_name, caller_uid, caller_token, message_data);
}


// media object to append to the page each time there's a new chat
function mediaObjectIM(user, uid, token, message) {
    var url_string = "https://www.googleapis.com/plus/v1/people/" + uid + "?access_token=" + token;
    $.getJSON(url_string, function(user_object) {
        var message_string = "  <div class='media' id='chatty'>" + "    <div class='media-body' id='div-chat-message', style='text-align: " + "left" + "'>" + "      <h4 class='media-heading' id='h4-chat-message'>" + "<span class='chat-message'>" + "      <img class='media-object' id='prof-pic' align='left' src=" + user_object.image.url + ">" + "<a class='chat-user-name' href='#'>" + user + "</a>: " + message + "</span></h4>" + "" + "    </div>" + "  </div>";
        $chatBody.append(message_string);
        var height = 0;
        $('div, #chatty').each(function(i, value) {
            height += parseInt($(this).height());
        });
        height = height + 2;
        //var d = $('#chat-box');
        //d.scrollTop(d.prop("scrollHeight"));
        $chatBody.animate({
            scrollTop: height
        }, 'fast');
    });
}

// this is a function to mirror the ruby truncate
// function so that queries do not overflow the benny
// query divs
function truncation(string, len){
    if (string.length > len + 3){
        var new_string;
        if (string.charAt(len - 1) == ' ') {
            new_string = string.substr(0, len-2) + "...";
        }
        else {
            new_string = string.substr(0, len-1) + "...";
        }
        return new_string;
    }
    else {
        return string;
    }
}

// this is a function that lights up the question mark in
// the blank and no query divs
function hoverHelp(){
    $('#help-icon2').css('color', '#FFFFFF');
    $("#benny-query-question-mark").hover( function(){
            $('#help-icon2').css('color', '#FFFFFF');
        }, function(){
            $('#help-icon2').css('color', '#777777');
        });
}









