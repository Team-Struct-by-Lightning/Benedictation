///////////////////////////////////////////////////////////////////////////////
///////////////////////////////====CHAT====////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

//variables for the chat box
var $sendButton = $("#js-send-button-im");
var $inputIM = $("#js-input-im");
var $chatBody = $("#js-chat-body");


var $speechRecBody = $("#speech-rec-body");
var localId = comm.getLocalID();



var $bennySendButton = $("#benny-send-button-im");
var $bennyInputIM = $("#benny-input-text");

$sendButton.on('click', sendIM);
$bennySendButton.on('click', sendMessage);

// click the send button when enter key is pressed
$inputIM.keydown(function (event) {
    var keypressed = event.keyCode || event.which;
    if (keypressed == 13) {
        $sendButton.click();
    }
});

var text_query_flag = 0;

$bennyInputIM.keydown(function (event) {
    var keypressed = event.keyCode || event.which;
    if (keypressed == 13) {
        $bennySendButton.click();
        $('#record-query-button').hide();
        $('.svg-box').hide();
        $('#progressbar').show();
        $('.progress-label').show();
        text_query_flag = 1;
    }
});



// Set up the WebSocket
var myLocation = location.host.split(":")[0];
var port = "8888";
var uri = "/recognize_test";
var websocketprotocol = "wss://";

if (location.protocol !== "https:") {
    websocketprotocol = "ws://";
    myLocation = myLocation.split(":")[0];
}

var bennySocket = new WebSocket(websocketprotocol + myLocation + ":" + port + uri); // initialize



function sendMessage() {
  waitForSocketConnection(bennySocket, function() {
      bennySocket.send($bennyInputIM.val());
      $bennyInputIM.val("");
  });
};

function waitForSocketConnection(socket, callback){
  setTimeout(
      function(){
          if (socket.readyState === 1) {
              if(callback !== undefined){
                  callback();
              }
              return;
          } else {
              waitForSocketConnection(socket,callback);
          }
      }, 5);
};


bennySocket.onmessage = function(e) {
    console.log("data from server: ", e.data);
    // reset flags so that ctrl-b will work again
    ready_to_record = 1;
    recordSpeech.recording = 0;
    count_b = 0;
    if (e.data != "") {
        try {
            var url = (window.location.pathname).split("/");
            var id = String(url[url.length - 2]);
            var name = String(url[url.length - 1]);
            var emails_key = name + ":" + id + ":emails";
            var attendees_to_send = [];
            $.ajax({
                type: "GET",
                url: "/get_redis",
                dataType: "json",
                data: {
                    'redis_key': emails_key
                },
                success: function(emails) {
                    if (emails.length != 0) {
                        for (var i = 0; i < emails.length; i++) {
                            attendees_to_send.push({
                                email: emails[i]
                            });
                        }
                    }
                    var myData = JSON.parse(e.data);
                    myData["attendees_array"] = attendees_to_send;
                    $.ajax({
                        type: "POST",
                        url: "/check_api",
                        data: {
                            jsonData: JSON.stringify(myData)
                        },
                        success: function() {
                            if (myData.api_type === 'wolfram') {
                                // append wolfram api html reply to the json we are saving in redis (so we can click again)
                                $.ajax({
                                    type: "GET",
                                    url: "/get_api_html",
                                    dataType: "json",
                                    success: function(api) {
                                        // add wolfram html to the json object so we can save it later
                                        myData['api_html'] = api['result'];
                                        console.log("real api type: ",myData['api_type']);
                                        myData['api_type'] = api['real_api_type'];
                                        sendBennyReply(JSON.stringify(myData));
                                    }
                                });
                            } else {
                                sendBennyReply(e.data);
                            }
                        }
                    });
                }
            });
        } catch (e) {
            console.log("data from server not JSON");
        }
    }
    ready_to_record = 1;
    recordSpeech.recording = 0;
    count_b = 0;
}




// With Turbolinks pages will change without a full reload, so you can't rely on the usual window.beforepageunload event. Instead Turbolinks fires events on document to provide hooks into the lifecycle of the page.
$(document).on("page:fetch", function() {
    console.log('turbolinks page fetch event');
});
// send a message
function sendIM() {
    "<% current_user.refresh_token_if_expired %>"
    var message = $inputIM.val();
    var content = "<%= current_user.name %>" + "@@@" + "<%= current_user.uid %>" + "@@@" + "<%= current_user.oauth_token %>" + "@@@" + message;
    comm.send(content)
    // send to redis if you are the user that originally created this message
    var url_string = "https://www.googleapis.com/plus/v1/people/" + "<%= current_user.uid %>" + "?access_token=" + "<%= current_user.oauth_token %>";
    $.getJSON(url_string, function(user_object) {
        var message_string = "  <div class='media' id='chatty'>" + "    <div class='media-body' id='div-chat-message', style='text-align: " + "left" + "'>" + "      <h4 class='media-heading' id='h4-chat-message'>" + "<span class='chat-message'>" + "      <img class='media-object' id='prof-pic' align='left' src=" + user_object.image.url + ">" + "<a class='chat-user-name' href='#'>" + "<%= current_user.name %>" + "</a>: " + message + "</span></h4>" + "" + "    </div>" + "  </div>";
        var url = (window.location.pathname).split("/");
        var id = String(url[url.length - 2]);
        var name = String(url[url.length - 1]);
        var key = name + ":" + id + ":chathistory";
        $.ajax({
            type: "POST",
            url: "/update_redis",
            data: {
                redis_key: key,
                message: message_string
            }
        });
        // append what you send to your own page
        appendNewIM({
            data: content,
            callerID: "<%= current_user.name %>",
        });
    });
    $inputIM.val("");
}
// send your benedict query result to everyone else in the chat
function sendBennyReply(json_api_reply) {
    var url = (window.location.pathname).split("/");
    var id = String(url[url.length - 2]);
    var name = String(url[url.length - 1])
    var key = name + ":" + id + ":bennyhistory";
    $.ajax({
           type: "GET",
           url: "/get_redis_length",
           dataType: "json",
           data: {
               'redis_key': key
           },
           success: function(item) {
                var len = parseInt(item['result'], 10);
                var user_name =  "<%= current_user.name %>";
                var name_arr = user_name.split(" ");
                var new_name = name_arr.join(":");
                var key_user_id_and_index =  String(len) + ":" + name + ":" + id + ":bennyhistory:" +"<%= current_user.email %>" + ":" + new_name;
                console.log("key_user_id_and_index: ",key_user_id_and_index);
                $.ajax({
                    type: "POST",
                    url: "/update_redis",
                    data: {
                        redis_key: key,
                        message: json_api_reply
                    }
                });
                if (json_api_reply['api_type'] != "No Result" && json_api_reply['api_type'] != "Blank Query") {
                    appendNewBennyReply({
                        name: "<%= current_user.name %>",
                        data: json_api_reply,
                        key: key_user_id_and_index,
                        callerID: "<%= current_user.name %>"
                    });
                    console.log("I'm about to call appendNewBennyReply");
                }
            }
    });

}


function appendNewIM_text_only(message_string) {
    $chatBody.append(message_string);
}
// stick new instant message onto the chat body
function appendNewIM(options) {
    var message_data = options.data.split("@@@");
    var caller_name = message_data[0];
    var caller_uid = message_data[1];
    var caller_token = message_data[2];
    message_data.reverse();
    message_data.pop();
    message_data.pop();
    message_data.pop();
    message_data.reverse();
    message_data.join("@@@");
    mediaObjectIM(caller_name, caller_uid, caller_token, message_data);
}
// stick new reply from benny onto the speechrec body
var benny_note_number = 0;

function appendNewBennyReply(options) {
    <% image_name = "" %>

    json_murph = JSON.parse(options.data);
    console.log("json_murph api type: ",json_murph.api_type);
    var name = truncation(options.name, 14);

    var query;
    if (json_murph.query) {
        query = json_murph.query;
        query = query.split(" '").join("'")
        query = query.split(" \u0027").join("'")
    }

    // if (json_murph.api_type != 'Blank Query') {
    //     benny_note_number = benny_note_number + 1;
    //     $('#benny-help-temp').remove();
    // }

    benny_note_number = benny_note_number + 1;
    $('#benny-help-temp').remove();

    if (json_murph.api_type == 'calendar' || json_murph.api_type == 'calendar_show'){

        <% image_name = "googz.ico" %>
        var summary = ""
        if (json_murph.summary == ""){
            summary = "No summary."
        }
        else {
            if (json_murph.api_type != 'calendar_show') {
                summary = truncation(json_murph.summary, 40);
            }
        }
        var key_array = options.key.split(":");
        var key_array_slice = key_array.slice(0, 4);
        var key = key_array_slice.join(":");
        var benny_item_id = "benny" + key;
        var benny_item_link_id = "benny_query" + key;
        var parameter = 'clickable("' + options.key + '")';
        $('.benny-list-body').addClass('benny-list-body-func');
        if (json_murph.api_type === 'calendar') {
            $('.benny-list-body').append('<div class="benny-item benny-calendar" id=' + benny_item_id +'>' +
                            '<%= image_tag("#{image_name}", class: "favicon") %>' +
                            '<a class="name-and-summary-calendar">' + name + '</a>' +
                            '<a class="benny-link" onclick=' + parameter + ' id=' +
                            benny_item_link_id + '> Summary: ' + summary + '</a>' +
                            '</div>');
        }
        else {
            $('.benny-list-body').append('<div class="benny-item benny-calendar" id=' + benny_item_id +'>' +
                '<%= image_tag("#{image_name}", class: "favicon") %>' +
                '<a class="name-and-summary-calendar">' + name + '</a>' +
                '<a class="benny-link" onclick=' + parameter + ' id=' +
                benny_item_link_id + '> View calendar </a>' +
                '</div>');
        }
    }
    else if (json_murph.api_type == 'wolfram'){
        <% image_name = "wolfram.jpg" %>
        if (json_murph.query == ""){
            query = "No query.";
        }
        else {
            query = truncation(query, 40);

        }
        var key_array = options.key.split(":");
        var key_array_slice = key_array.slice(0, 4);
        var key = key_array_slice.join(":");
        var benny_item_id = "benny" + key;
        var benny_item_link_id = "benny_query" + key;
        console.log("benny item link id in chat: ", benny_item_link_id);
        var parameter = 'clickable("' + options.key + '")';
        $('.benny-list-body').addClass('benny-list-body-func');
        $('.benny-list-body').append('<div class="benny-item benny-wolfram" id=' + benny_item_id +'>' +
                            '<%= image_tag("#{image_name}", class: "favicon") %>' +
                            '<a class="name-and-summary-wolfram">' + name + '</a>' +
                            '<a class="benny-link" onclick=' + parameter + ' id=' +
                            benny_item_link_id + '> Query: ' + query + '?</a>' +
                            '</div>');

    }
    else if (json_murph.api_type == 'google') {
        <% image_name = "google-fav.jpg" %>
        var query = ""
        if (json_murph.query == ""){
            query = "No query.";
        }
        else {
            query = truncation(json_murph.query, 40);

        }

        var key_array = options.key.split(":");
        var key_array_slice = key_array.slice(0, 4);
        var key = key_array_slice.join(":");
        var benny_item_id = "benny" + key;
        var benny_item_link_id = "benny_query" + key;
        var parameter = 'clickable("' + options.key + '")';


        $('.benny-list-body').addClass('benny-list-body-func');
        $('.benny-list-body').append('<div class="benny-item benny-google" id=' + benny_item_id +'>' +
                            '<%= image_tag("#{image_name}", class: "favicon", id:"google-fav") %>' +
                            '<a class="name-and-summary-wolfram">' + name + '</a>' +
                            '<a class="benny-link" onclick=' + parameter + ' id=' +
                            benny_item_link_id + '> Query: ' + query + '</a>' +
                            '</div>');


    }
    else if(json_murph.api_type == 'wikipedia'){
        console.log("woooo, wolfram to wikipedia transition worked!");
    }
    else if (json_murph.api_type == 'docs' || json_murph.api_type == 'docs_show'){

    }
    else if (json_murph.api_type == 'No Result' || json_murph.api_type == 'Blank Query') {

        $('.benny-list-body').append('<div class="benny-item benny-no-result" id=' + benny_item_id +'>' +
                        '<a class="glyphicon glyphicon-question-sign" id="benny-query-question-mark" onmouseover="hoverHelp()"></a>' +
                        '<a class="no-result-benny-link"> Sorry we could not match your request. ' +
                        'For suggestions, click "Help" above.</a>' +
                        '<a class="name-and-summary-no-result">' + name + '</a>' +
                        '</div>');
        var benny_childs = $('.benny-list-body').children()
        var item_to_toggle = benny_childs[benny_childs.length - 1];
        $(item_to_toggle).delay(20000).slideToggle( function() {
             item_to_toggle.remove();
             if (benny_note_number != 0) {
                benny_note_number = benny_note_number - 1;
             }
             bennyNotificationNumber();
         });



    }
    var height = 0;
    $('.benny-item').each(function(i, value) {
        height += parseInt($(this).height());
    });
    $('.benny-list-body').animate({
        scrollTop: height
    }, 'fast');


    $('#progressbar').hide();
    $('.progress-label').hide();
    $('#record-query-button').show();
    $('.svg-box').show();
    text_query_flag = 0;
}

// media object to append to the page each time there's a new chat
function mediaObjectIM(user, uid, token, message) {
    var url_string = "https://www.googleapis.com/plus/v1/people/" + uid + "?access_token=" + token;
    $.getJSON(url_string, function(user_object) {
        var message_string = "  <div class='media' id='chatty'>" + "    <div class='media-body' id='div-chat-message', style='text-align: " + "left" + "'>" + "      <h4 class='media-heading' id='h4-chat-message'>" + "<span class='chat-message'>" + "      <img class='media-object' id='prof-pic' align='left' src=" + user_object.image.url + ">" + "<a class='chat-user-name' href='#'>" + user + "</a>: " + message + "</span></h4>" + "" + "    </div>" + "  </div>";
        $chatBody.append(message_string);
        var height = 0;
        $('div, #chatty').each(function(i, value) {
            height += parseInt($(this).height());
        });
        height = height + 2;
        //var d = $('#chat-box');
        //d.scrollTop(d.prop("scrollHeight"));
        $('#js-chat-body').animate({
            scrollTop: height
        }, 'fast');
    });
}

// this is a function to mirror the ruby truncate
// function so that queries do not overflow the benny
// query divs
function truncation(string, len){
    if (string.length > len + 3){
        var new_string;
        if (string.charAt(len - 1) == ' ') {
            new_string = string.substr(0, len-2) + "...";
        }
        else {
            new_string = string.substr(0, len-1) + "...";
        }
        return new_string;
    }
    else {
        return string;
    }
}

// this is a function that lights up the question mark in
// the blank and no query divs
function hoverHelp(){
    $('#help-icon2').css('color', '#FFFFFF');
    $("#benny-query-question-mark").hover( function(){
            $('#help-icon2').css('color', '#FFFFFF');
        }, function(){
            $('#help-icon2').css('color', '#777777');
        });
}

// This is the interval that checks whether or not benny
// notifications need to be hidden
var benny_notification_interval = setInterval(bennyNotificationNumber, 300);

// this is the function that is called by the interval
// that actually does the hiding of the benny notification
// number
function bennyNotificationNumber(){
    if (benny_note_number <= 0 ) {
         $('.notification-number').hide();
    }
    else {
         $('.notification-number').html(benny_note_number.toString());
         $('.notification-number').show();
    }
}









