<!-- Sidebar -->
<div id="sidebar-wrapper">
   <ul class="sidebar-nav sidebar-title">
      <li class="sidebar-brand" id="first-group-row"><a id="menu-toggle" href="#">Groups<span id="main_icon" class="glyphicon glyphicon-align-justify" value="0"></span></a></li>
   </ul>
   <ul class="sidebar-nav group-sidebar-list" id="group-sidebar-list">
       <% Relationship.where(user_id: current_user.id).pluck(:id).each do |relationship_id| %>
      <li class="dropdown-toggle" id="group-row" data-toggle="dropdown" unique=<%= relationship_id %> value="0" >
         <% group = Relationship.find_by(id: relationship_id).group %>
         <% group_id = group.id %>
         <% group_name = group.group_name %>
         <% group_name_url_string = "/room/" + "#{group_id}" + "/" + group_name %>
         <%= form_for(current_user.active_relationships.find_by(id: relationship_id),
            html: { method: :delete }) do |f| %>
         <a class="popup-with-form glyphicon glyphicon-remove sidebar-item" id="delete-group" href=<%= '#delete-user' + relationship_id.to_s %> aria-hidden="true">
         </a>
         <% if group_name_url_string.length < 8 %>
         <a class="menu-group" id=<%= "menu-group" + group_id.to_s%>><%= "#" + group_name%></a>
         <% else %>
         <a class="menu-group group-name sidebar-item" id=<%= "menu-group" + group_id.to_s%>><%= "#" + truncate(group_name, length: 9 )%></a>
         <% end %>
         <a class="popup-with-form glyphicon glyphicon-plus sidebar-item" id="add-user" href=<%= '#add-user' + group_id.to_s %> aria-hidden="true">
         </a>
         <a class="glyphicon glyphicon-facetime-video" id="go-to-room" href=<%= group_name_url_string %> aria-hidden="true">
         </a>
         <% end %>
         <div id=<%= 'add-user' + group_id.to_s %> class="white-popup-block mfp-hide">
            <!-- form gets the new user email -->
            <h1>Add a user to the group:  <%= group_name %></h1>
            <%= form_tag(controller: "groups", action: "popupadduser", method: "post") do |f| %>
            <%= label_tag "New Member Email:" %>
            <%= text_field_tag :newmemberemail, params[:newmemberemail], class: "email-selector" %>
            <%= hidden_field_tag :groupid, group_id%>
            <%= submit_tag "Add new user to group", class: "btn btn-primary" %>

            <%= javascript_tag do %>
               // tell python server to send email to the user if the user does not yet exist
               var email = "<%= get_most_recent_email %>"
               console.log("email: ",email);
               if(email != ""){
                  // Set up the WebSocket
                  var myLocation = location.host;
                  var port = "8888";
                  var websocketprotocol = "wss://";
                  if (location.protocol !== "https:") {
                      websocketprotocol = "ws://";
                      myLocation = myLocation.split(":")[0];
                  }
                  var uri = "/email";
                  console.log("connecting to this websocket: " + websocketprotocol + myLocation + ":" + port + uri);
                  var w = new WebSocket(websocketprotocol + myLocation + ":" + port + uri);
                  json_email = String('{"send_name": "' + '<%= current_user.name %>' +'",' +
                                '"send_email": "team.struct.by.lightning@gmail.com",' +
                                '"join_group": "' + '<%= Group.find(group_id).group_name %>' + '",' +
                                '"recipient_email": "' + email +'",' +
                                '"email_type": "invite"' +
                                '}')
                  console.log(json_email);

                  function sendMessage(msg) {
                      waitForSocketConnection(w, function() {
                          w.send(msg);
                          w.close();
                      });
                  };


                  function waitForSocketConnection(socket, callback){
                      setTimeout(
                          function(){
                              if (socket.readyState === 1) {
                                  if(callback !== undefined){
                                      callback();
                                  }
                                  return;
                              } else {
                                  waitForSocketConnection(socket,callback);
                              }
                          }, 5);
                  };

                  sendMessage(json_email);
               }
            <% end %>
            <% end %>
         </div>
         <div id=<%= 'delete-user' + relationship_id.to_s %> class="white-popup-block mfp-hide">
            <h1> Are you sure you want to leave the group <%= group_name %> ?</h1>
            <br>
            <%= form_for(current_user.active_relationships.find_by(id: relationship_id),
               html: { method: :delete }) do |f| %>
            <%= f.submit "Leave group" , class: "btn btn-primary" %>
            <% end %>
         </div>
      </li>
      <% end %>
   </ul>
   <ul class="sidebar-nav create-group-list" id="create-group-list">
      <li id="sidebar-create-group-list-item">
         <a class="popup-with-form sidebar-item glyphicon glyphicon-plus" id="create-group-button" href="#create-group" ><p id="sidebar-create-group">Create new group</p></a>
      </li>
      <li id="sidebar-temp-room-list-item">
        <% random_url = "/room/" + get_random_string + "/" + get_random_string %>
        <a class="sidebar-item glyphicon glyphicon-facetime-video" id="create-conference-room-button" href=<%= random_url %> ><p id="sidebar-temp-room-text">Join a temporary room </p></a>
      </li>
   </ul>
   <div id="create-group" class="white-popup-block mfp-hide">
      <h1>Create a Group!</h1>
      <%= form_tag(controller: "groups", action: "create", method: "post") do |f| %>
      <%= label_tag  "Group Name" %>
      <%= text_field_tag :group_name, params[:group_name.downcase], placeholder: " Only alpha-numeric and underscore characters accepted" %>
      <%= submit_tag "Create new group", class: "btn btn-primary" %>
      <% end %>
   </div>
</div>
        <!-- /#sidebar-wrapper -->


