///////////////////////////////////////////////////////////////////////////////
///////////////////////////////====CHAT====////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
//variables for the chat box
var $sendButton = $("#js-send-button-im");
var $inputIM = $("#js-input-im");
var $chatBody = $("#js-chat-body");
var $speechRecBody = $("#speech-rec-body");
var localId = comm.getLocalID();
var $bennySendButton = $("#benny-send-button-im");
var $bennyInputIM = $("#benny-input-text");
$sendButton.on('click', sendIM);
$bennySendButton.on('click', sendMessage);
// click the send button when enter key is pressed
$inputIM.keydown(function(event) {
    var keypressed = event.keyCode || event.which;
    if (keypressed == 13) {
        $sendButton.click();
    }
});
var text_query_flag = 0;
$bennyInputIM.keydown(function(event) {
    var keypressed = event.keyCode || event.which;
    if (keypressed == 13) {
        $bennySendButton.click();
        $('#record-query-button').hide();
        $('.svg-box').hide();
        $('#progressbar').show();
        $('.progress-label').show();
        text_query_flag = 1;
    }
});
// Set up the WebSocket connection to the NLP interpreter.
var myLocation = location.host.split(":")[0];
var port = "8888";
var uri = "/recognize_test";
var websocketprotocol = "wss://";
if (location.protocol !== "https:") {
    websocketprotocol = "ws://";
    myLocation = myLocation.split(":")[0];
}
var bennySocket = new WebSocket(websocketprotocol + myLocation + ":" + port + uri); // initialize
bennySocket.onmessage = onBennyReply; // defined in _room_benny_helper_functions
function sendMessage() {
    waitForSocketConnection(bennySocket, function() {
        bennySocket.send($bennyInputIM.val());
        $bennyInputIM.val("");
    });
};

function waitForSocketConnection(socket, callback) {
    setTimeout(function() {
        if (socket.readyState === 1) {
            if (callback !== undefined) {
                callback();
            }
            return;
        } else {
            waitForSocketConnection(socket, callback);
        }
    }, 5);
};
// Send a new chat message to everyone else in the room.
function sendIM() { <%= puts "FROM CHAT" %> "<% current_user.refresh_token_if_expired %>"
    var message = $inputIM.val();
    var content = "<%= current_user.name %>" + "@@@" + "<%= current_user.uid %>" + "@@@" + "<%= current_user.oauth_token %>" + "@@@" + message;
    comm.send(content)
    // send to redis if you are the user that originally created this message
    var url_string = "https://www.googleapis.com/plus/v1/people/" + "<%= current_user.uid %>" + "?access_token=" + "<%= current_user.oauth_token %>";
    $.getJSON(url_string, function(user_object) {
        var message_string = "  <div class='media' id='chatty'>" + "    <div class='media-body' id='div-chat-message', style='text-align: " + "left" + "'>" + "      <h4 class='media-heading' id='h4-chat-message'>" + "<span class='chat-message'>" + "      <img class='media-object' id='prof-pic' align='left' src=" + user_object.image.url + ">" + "<a class='chat-user-name' href='#'>" + "<%= current_user.name %>" + "</a>: " + message + "</span></h4>" + "" + "    </div>" + "  </div>";
        var url = (window.location.pathname).split("/");
        var id = String(url[url.length - 2]);
        var name = String(url[url.length - 1]);
        var key = name + ":" + id + ":chathistory";
        $.ajax({
            type: "POST",
            url: "/update_redis",
            data: {
                redis_key: key,
                message: message_string
            }
        });
        // append what you send to your own page
        appendNewIM({
            data: content,
            callerID: "<%= current_user.name %>",
        });
    });
    $inputIM.val("");
}
// Send your a Benedict query result to everyone else in the room,
// so it will appear in the Benedict query sidebar.
function sendBennyReply(json_api_reply) {
    var url = (window.location.pathname).split("/");
    var id = String(url[url.length - 2]);
    var name = String(url[url.length - 1])
    var key = name + ":" + id + ":bennyhistory";
    console.log("now gonna push it to redis");
    $.ajax({
        type: "GET",
        url: "/get_redis_length",
        dataType: "json",
        data: {
            'redis_key': key
        },
        success: function(item) {
            console.log("@@@success (item) in sendBennyReply: ", item);
            var len = parseInt(item['result'], 10);
            var user_name = "<%= current_user.name %>";
            var name_arr = user_name.split(" ");
            var new_name = name_arr.join(":");
            var key_user_id_and_index = String(len) + ":" + name + ":" + id + ":bennyhistory:" + "<%= current_user.email %>" + ":" + new_name;
            json_api_reply['name'] = "<%= current_user.name %>"
            json_api_reply['key'] = key_user_id_and_index;
            console.log("json_api_reply in sendBennyReply: ", json_api_reply);
            $.ajax({
                type: "POST",
                url: "/update_redis",
                data: {
                    redis_key: key,
                    message: JSON.stringify(json_api_reply)
                }
            });
            if (json_api_reply['api_type'] != "No Result" && json_api_reply['api_type'] != "Blank Query") {
                // send benny reply to everyone else
                console.log("sending this through comm.send: ", json_api_reply);
                comm.send(json_api_reply);
                // append benny reply to your own page
                appendNewBennyReply(json_api_reply);
            }
        }
    });
}

function appendNewIM_text_only(message_string) {
    $chatBody.append(message_string);
}
// stick new instant message onto the chat body
function appendNewIM(options) {
    console.log(options);
    var message_data = options.data.split("@@@");
    var caller_name = message_data[0];
    var caller_uid = message_data[1];
    var caller_token = message_data[2];
    message_data.reverse();
    message_data.pop();
    message_data.pop();
    message_data.pop();
    message_data.reverse();
    message_data.join("@@@");
    mediaObjectIM(caller_name, caller_uid, caller_token, message_data);
}
// This function appends a new Benedict query reply onto the sidebar.
// This is where the sidebar div is created.
var benny_note_number = 0;

function appendNewBennyReply(json_murph) { <% image_name = "" %> console.log("json_murph: ", json_murph);
    console.log("json.parse: ", json_murph);
    var name = truncation(json_murph.name, 14);
    var query;
    if (json_murph.query) {
        query = json_murph.query;
        query = query.split(" '").join("'")
        query = query.split(" \u0027").join("'")
    }
    benny_note_number = benny_note_number + 1;
    $('#benny-help-temp').remove();
    if (json_murph.api_type == 'calendar' || json_murph.api_type == 'calendar_show') { <% image_name = "googz.ico" %>
        var summary = ""
        if (json_murph.summary == "") {
            summary = "No summary."
        } else {
            if (json_murph.api_type != 'calendar_show') {
                summary = truncation(json_murph.summary, 40);
            }
        }
        var key_array = json_murph.key.split(":");
        var key_array_slice = key_array.slice(0, 4);
        var key = key_array_slice.join(":");
        var benny_item_id = "benny" + key;
        var benny_item_link_id = "benny_query" + key;
        var parameter = 'clickable("' + json_murph.key + '")';
        $('.benny-list-body').addClass('benny-list-body-func');
        if (json_murph.api_type === 'calendar') {
            $('.benny-list-body').append('<div class="benny-item benny-calendar" id=' + benny_item_id + '>' + '<%= image_tag("#{image_name}", class: "favicon") %>' + '<a class="name-and-summary-calendar">' + name + '</a>' + '<a class="benny-link" onclick=' + parameter + ' id=' + benny_item_link_id + '> Summary: ' + summary + '</a>' + '</div>');
        } else {
            $('.benny-list-body').append('<div class="benny-item benny-calendar" id=' + benny_item_id + '>' + '<%= image_tag("#{image_name}", class: "favicon") %>' + '<a class="name-and-summary-calendar">' + name + '</a>' + '<a class="benny-link" onclick=' + parameter + ' id=' + benny_item_link_id + '> View calendar </a>' + '</div>');
        }
    } else if (json_murph.api_type == 'schedule_suggest') { <% image_name = "googz.ico" %>
        var key_array = json_murph.key.split(":");
        var key_array_slice = key_array.slice(0, 4);
        var key = key_array_slice.join(":");
        var benny_item_id = "benny" + key;
        var benny_item_link_id = "benny_query" + key;
        var parameter = 'clickable("' + json_murph.key + '")';
        $('.benny-list-body').addClass('benny-list-body-func');
        $('.benny-list-body').append('<div class="benny-item benny-calendar" id=' + benny_item_id + '>' + '<%= image_tag("#{image_name}", class: "favicon") %>' + '<a class="name-and-summary-calendar">' + name + '</a>' + '<a class="benny-link" onclick=' + parameter + ' id=' + benny_item_link_id + '> Suggested times </a>' + '</div>');
    } else if (json_murph.api_type == 'wolfram') { <% image_name = "wolfram.jpg" %>
        if (json_murph.query == "") {
            query = "No query.";
        } else {
            query = truncation(query, 40);
        }
        var key_array = json_murph.key.split(":");
        var key_array_slice = key_array.slice(0, 4);
        var key = key_array_slice.join(":");
        var benny_item_id = "benny" + key;
        var benny_item_link_id = "benny_query" + key;
        // first, second, third order of apis
        var first_choice_api = json_murph.first;
        var second_choice_api = json_murph.second;
        var third_choice_api = json_murph.third;
        // first, second, and third order of api images
        var first_choice_image_name = json_murph.first_image_name;
        var second_choice_image_name = json_murph.second_image_name;
        var third_choice_image_name = json_murph.third_image_name;

        console.log("benny item link id in chat: ", benny_item_link_id);
        var parameter1 = 'clickable("' + json_murph.key + '"' + ',' + '"' + first_choice_api + '")';
        var parameter2 = 'clickable("' + json_murph.key + '"' + ',' + '"' + second_choice_api + '")';
        var parameter3 = 'clickable("' + json_murph.key + '"' + ',' + '"' + third_choice_api + '")';
        $('.benny-list-body').addClass('benny-list-body-func');
        $('.benny-list-body').append('<div class="benny-item benny-wolfram" id=' + benny_item_id + '>' + '<a onclick=' + parameter1 + '>' + '<img class="favicon question-favicon" src="' + first_choice_image_name + '" />' + '</a>' + '<a onclick=' + parameter2 + '>' + '<img class="favicon left-fav-small" src="' + second_choice_image_name + '" />' + '</a>' + '<a onclick=' + parameter3 + '>' + '<img class="favicon right-fav-small" src="' + third_choice_image_name + '" />' + '</a>' + '<a class="name-and-summary-wolfram">' + name + '</a>' + '<a class="benny-link question-link" onclick=' + parameter1 + ' id=' + benny_item_link_id + '> Query: ' + query + '</div>');
    } else if (json_murph.api_type == 'google') { <% image_name = "google-fav.jpg" %>
        var query = ""
        if (json_murph.query == "") {
            query = "No query.";
        } else {
            query = truncation(json_murph.query, 40);
        }
        var key_array = json_murph.key.split(":");
        var key_array_slice = key_array.slice(0, 4);
        var key = key_array_slice.join(":");
        var benny_item_id = "benny" + key;
        var benny_item_link_id = "benny_query" + key;
        // first, second, third order of apis
        var first_choice_api = json_murph.first;
        var second_choice_api = json_murph.second;
        var third_choice_api = json_murph.third;
        // first, second, and third order of api images
        var first_choice_image_name = json_murph.first_image_name;
        var second_choice_image_name = json_murph.second_image_name;
        var third_choice_image_name = json_murph.third_image_name;
        var parameter1 = 'clickable("' + json_murph.key + '"' + ',' + '"' + first_choice_api + '")';
        var parameter2 = 'clickable("' + json_murph.key + '"' + ',' + '"' + second_choice_api + '")';
        var parameter3 = 'clickable("' + json_murph.key + '"' + ',' + '"' + third_choice_api + '")';
        $('.benny-list-body').addClass('benny-list-body-func');
        $('.benny-list-body').append('<div class="benny-item benny-wolfram" id=' + benny_item_id + '>' + '<a onclick=' + parameter1 + '>' + '<img class="favicon question-favicon" src="' + first_choice_image_name + '" />' + '</a>' + '<a onclick=' + parameter2 + '>' + '<img class="favicon left-fav-small" src="' + second_choice_image_name + '" />' + '</a>' + '<a onclick=' + parameter3 + '>' + '<img class="favicon right-fav-small" src="' + third_choice_image_name + '" />' + '</a>' + '<a class="name-and-summary-wolfram">' + name + '</a>' + '<a class="benny-link question-link" onclick=' + parameter1 + ' id=' + benny_item_link_id + '> Query: ' + query + '</div>');
    } else if (json_murph.api_type == 'google_docs' || json_murph.api_type == 'docs_show') { <% image_name = "google_docs.png" %>
        var key_array = json_murph.key.split(":");
        var key_array_slice = key_array.slice(0, 4);
        var key = key_array_slice.join(":");
        var benny_item_id = "benny" + key;
        var benny_item_link_id = "benny_query" + key;
        var parameter = 'clickable("' + json_murph.key + '")';
        $('.benny-list-body').addClass('benny-list-body-func');
        $('.benny-list-body').append('<div class="benny-item benny-google" id=' + benny_item_id + '>' + '<%= image_tag("#{image_name}", class: "favicon", id:"google-fav") %>' + '<a class="name-and-summary-calendar">' + name + '</a>' + '<a class="benny-link" onclick=' + parameter + ' id=' + benny_item_link_id + '> Document created by Benedict at ' + json_murph['current_time'] + ' </a>' + '</div>');
    } else if (json_murph.api_type == 'google_drawings') { <% image_name = "google_drawing.ico" %>
        var key_array = json_murph.key.split(":");
        var key_array_slice = key_array.slice(0, 4);
        var key = key_array_slice.join(":");
        var benny_item_id = "benny" + key;
        var benny_item_link_id = "benny_query" + key;
        var parameter = 'clickable("' + json_murph.key + '")';
        $('.benny-list-body').addClass('benny-list-body-func');
        $('.benny-list-body').append('<div class="benny-item benny-google" id=' + benny_item_id + '>' + '<%= image_tag("#{image_name}", class: "favicon", id:"google-fav") %>' + '<a class="name-and-summary-calendar">' + name + '</a>' + '<a class="benny-link" onclick=' + parameter + ' id=' + benny_item_link_id + '> Drawing created by Benedict at ' + json_murph['current_time'] + ' </a>' + '</div>');
    } else if (json_murph.api_type == 'wikipedia') { <% image_name = "wikipedia.ico" %>
        if (json_murph.query == "") {
            query = "No query.";
        } else {
            query = truncation(query, 40);
        }
        var key_array = json_murph.key.split(":");
        var key_array_slice = key_array.slice(0, 4);
        var key = key_array_slice.join(":");
        var benny_item_id = "benny" + key;
        var benny_item_link_id = "benny_query" + key;
        console.log("benny item link id in chat: ", benny_item_link_id);
        // first, second, third order of apis
        var first_choice_api = json_murph.first;
        var second_choice_api = json_murph.second;
        var third_choice_api = json_murph.third;
        // first, second, and third order of api images
        var first_choice_image_name = json_murph.first_image_name;
        var second_choice_image_name = json_murph.second_image_name;
        var third_choice_image_name = json_murph.third_image_name;
        var parameter1 = 'clickable("' + json_murph.key + '"' + ',' + '"' + first_choice_api + '")';
        var parameter2 = 'clickable("' + json_murph.key + '"' + ',' + '"' + second_choice_api + '")';
        var parameter3 = 'clickable("' + json_murph.key + '"' + ',' + '"' + third_choice_api + '")';
        $('.benny-list-body').addClass('benny-list-body-func');
        $('.benny-list-body').append('<div class="benny-item benny-wolfram" id=' + benny_item_id + '>' + '<a onclick=' + parameter1 + '>' + '<img class="favicon question-favicon" src="' + first_choice_image_name + '" />' + '</a>' + '<a onclick=' + parameter2 + '>' + '<img class="favicon left-fav-small" src="' + second_choice_image_name + '" />' + '</a>' + '<a onclick=' + parameter3 + '>' + '<img class="favicon right-fav-small" src="' + third_choice_image_name + '" />' + '</a>' + '<a class="name-and-summary-wolfram">' + name + '</a>' + '<a class="benny-link question-link" onclick=' + parameter1 + ' id=' + benny_item_link_id + '> Query: ' + query + '</div>');
    } else if (json_murph.api_type == 'No Result' || json_murph.api_type == 'Blank Query') {
        $('.benny-list-body').append('<div class="benny-item benny-no-result" id=' + benny_item_id + '>' + '<a class="glyphicon glyphicon-question-sign" id="benny-query-question-mark" onmouseover="hoverHelp()"></a>' + '<a class="no-result-benny-link"> Sorry we could not match your request. ' + 'For suggestions, click "Help" above.</a>' + '<a class="name-and-summary-no-result">' + name + '</a>' + '</div>');
        var benny_childs = $('.benny-list-body').children()
        var item_to_toggle = benny_childs[benny_childs.length - 1];
        $(item_to_toggle).delay(20000).slideToggle(function() {
            item_to_toggle.remove();
            if (benny_note_number != 0) {
                benny_note_number = benny_note_number - 1;
            }
            bennyNotificationNumber();
        });
    }
    var height = 0;
    $('.benny-item').each(function(i, value) {
        height += parseInt($(this).height());
    });
    $('.benny-list-body').animate({
        scrollTop: height
    }, 'fast');
    $('#progressbar').hide();
    $('.progress-label').hide();
    $('#record-query-button').show();
    $('.svg-box').show();
    text_query_flag = 0;
}
// media object to append to the page each time there's a new chat
function mediaObjectIM(user, uid, token, message) {
    var url_string = "https://www.googleapis.com/plus/v1/people/" + uid + "?access_token=" + token;
    $.getJSON(url_string, function(user_object) {
        var message_string = "  <div class='media' id='chatty'>" + "    <div class='media-body' id='div-chat-message', style='text-align: " + "left" + "'>" + "      <h4 class='media-heading' id='h4-chat-message'>" + "<span class='chat-message'>" + "      <img class='media-object' id='prof-pic' align='left' src=" + user_object.image.url + ">" + "<a class='chat-user-name' href='#'>" + user + "</a>: " + message + "</span></h4>" + "" + "    </div>" + "  </div>";
        $chatBody.append(message_string);
        var height = 0;
        $('div, #chatty').each(function(i, value) {
            height += parseInt($(this).height());
        });
        height = height + 2;
        //var d = $('#chat-box');
        //d.scrollTop(d.prop("scrollHeight"));
        $('#js-chat-body').animate({
            scrollTop: height
        }, 'fast');
    });
}
// this is a function to mirror the ruby truncate
// function so that queries do not overflow the benny
// query divs
function truncation(string, len) {
    if (string.length > len + 3) {
        var new_string;
        if (string.charAt(len - 1) == ' ') {
            new_string = string.substr(0, len - 2) + "...";
        } else {
            new_string = string.substr(0, len - 1) + "...";
        }
        return new_string;
    } else {
        return string;
    }
}
// this is a function that lights up the question mark in
// the blank and no query divs
function hoverHelp() {
    $('#help-icon2').css('color', '#FFFFFF');
    $("#benny-query-question-mark").hover(function() {
        $('#help-icon2').css('color', '#FFFFFF');
    }, function() {
        $('#help-icon2').css('color', '#777777');
    });
}
// This is the interval that checks whether or not benny
// notifications need to be hidden
var benny_notification_interval = setInterval(bennyNotificationNumber, 300);
// this is the function that is called by the interval
// that actually does the hiding of the benny notification
// number
function bennyNotificationNumber() {
    if (benny_note_number <= 0) {
        $('.notification-number').hide();
    } else {
        $('.notification-number').html(benny_note_number.toString());
        $('.notification-number').show();
    }
}
$(".favicon").click(function() {
    console.log("we are clicking!");
    console.log($this.alt);
})