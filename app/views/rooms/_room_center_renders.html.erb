<%= javascript_tag do %>
// upon clicking the link in the benny query
// divs, this function is called so that
// the appropriate api render is created
// pulling information from redis and using
// the unique id given by the link.
// The 'me' parameter gives us back the id of
// the div the link refers to, and the
// data is parsed from it to find the Redis key
// and then the correct api render is selected,
// populated, and appended to the center of the page
function clickable(me) {
    // here we get the children of the center drop spot
    // and if there is a video in the center of the page
    // we append it back to the sidebar so that we can clear up
    // the center render spot before we render
    var children = $("#drop-spot").children();
    console.log(children);
    // although we hope for only 1 video to be in the center, we
    // create a for loop just in case there was an edge case we missed
    for (i = 0; i < children.length; i++) {
        if ($(children[i]).hasClass("video-center")) {
            var video = children[i];
            document.getElementById(get_free_spot()).appendChild(children[i]);
            // we need this line so that the video will be set to play
            // upon appending it back to the video list
            $(video).get(0).play();
        }
    }
    // we remove the current item taking up the render spot so that
    // we do not accumulate a ton of divs in the center of the page
    $('.render-spot').remove();
    // this sequence of commands parses the 'me' parameter
    // 'me' is a colon delimeted string that contains and
    // when split on a colon is an array of length 5 or more
    // depending on the length of a user's name.  Its
    // values are as follows:
    // arr[0] is the redis index
    // arr[1] through arr[3] is the redis key
    // arr[4] is the user's email
    // arr[5] through arr[5+n] n \in \N \cup \{ 0 \}
    //                        (natural numbers including 0)
    // split on colon
    var arr = me.split(':');
    // take the redis index
    var index = arr[0];
    // take the user email
    var user_email = arr[4];
    // get the user's names
    var name_array = arr.slice(5, arr.length);
    // join the different parts of the user's names on space
    var user_name = name_array.join(" ");
    // get the redis key
    var key_arr = arr.slice(1, 4);
    // join the redis key on a colon
    var key = key_arr.join(":");
    // gives us the id of the div we shall create
    var div_id_arr = arr.slice(0, 4);
    // joins the div id on a colon from the sliced array
    var div_id = div_id_arr.join(":");
    //initializes the api_type variable to empty
    var api_type = "";
    // this is an AJAX RESTful GET request that is routed
    // through the URL "/get_redis_item" through the groups
    // controller to the function get_redis_item, whose params
    // are the 'redis_key' and the 'index'
    $.ajax({
        type: "GET",
        url: "/get_redis_item",
        dataType: "json",
        data: {
            'redis_key': key,
            'index': index
        },
        success: function(item) {
            // Upon success of the GET request, we return an item from
            // Redis which is a JSON object.  We first check the api type
            // and we have an if statement that let's us determine which
            // api the Redis item corresponds to
            api_type = item['api_type'];
            // the aforementioned 'if/else if' block
            if (api_type == 'calendar' || api_type == 'calendar_show') {
                // the title at the top of the div
                var user_name_title = user_name + "\'s Google Calendar";
                // this is used in the email_url and also we use this
                // if the user does not have their Google + name set up.
                // We grab the email without the '@gmail.com' part
                // of the string
                var email_name = user_email.split('@')[0];
                // this is hardcoded to our time zone but this needs to be scaled so that we handle
                // different timezones
                var user_timezone = '<%= user_timezone = "America/Los_Angeles" %>';
                // this is the url string dependent on the user that will be put into
                // the iframe src field
                var email_url = "https://www.google.com/calendar/embed?showPrint=0&amp;showTz=0&amp;mode=WEEK&amp;height=600&amp;wkst=1&amp;bgcolor=%23ffffff&amp;src=" + email_name + "%40gmail.com&amp;color=%234E5D6C&amp;ctz=" + user_timezone;
                // adds the word render to the unique id of the div based on
                // the info stored in its redis key
                var render_item_id = "render" + div_id;
                // this appends the calendar iframe, title, remove x glyph, and the border
                // to the room layout table
                $('.room-layout-table').append('<div class="render-spot" id=' + render_item_id + '>' + '  <div class="calendar-border"> <h1 class="calendar-title">' + user_name_title + '</h1> <a class="glyphicon glyphicon-remove" id="remove_item_id"></a>' + '<iframe class="calendar-frame" src=' + email_url + ' style=" border-width:0 " width="800" height="600" frameborder="0" scrolling="no"></iframe></div>' + '</div>');
            } else if (api_type == 'schedule_suggest') {
                var render_item_id = "render" + div_id;
                var title = "Suggested times";
                var suggestions = item['suggested_times']; // is this JSON or string?
                // var suggestionOptions = "<div><ul>"
                // for(suggestion in suggestions) {
                //   suggestionOptions += "<li>" +   
                // }
                // suggestionOptions += "</ul></div>"
                $('.room-layout-table').append('<div class="render-spot" id=' + render_item_id + '>' + '  <div class="calendar-border"> <h1 class="calendar-title">' + title + '</h1> <a class="glyphicon glyphicon-remove" id="remove_item_id"></a>' + '  <div> ' + suggestions + '</div></div></div>');
            } else if (api_type == 'google') {
                // title of the center render
                var title = "Search Results";
                // adds the word render to the unique id of the div based on
                // the info stored in its redis key
                var render_item_id = "render" + div_id;
                // the query to be input through search control
                var search_query = item['query'];
                // this appends the google search border, remove x glyph, and
                // search results to the room layout table
                $('.room-layout-table').append('<div class="render-spot" id=' + render_item_id + '>' + '  <div class="calendar-border" style="height:540px;"> <h1 class="calendar-title">' + title + '</h1> <a class="glyphicon glyphicon-remove" id="remove_item_id"></a>' + '<div id="searchcontrol">Loading</div>' + '</div>' + '</div>');
                var searchControl = new google.search.SearchControl();
                // Add in a full set of searchers
                searchControl.addSearcher(new google.search.WebSearch());
                searchControl.addSearcher(new google.search.ImageSearch());
                searchControl.addSearcher(new google.search.VideoSearch());
                searchControl.addSearcher(new google.search.NewsSearch());
                // create a drawOptions object
                var drawOptions = new google.search.DrawOptions();
                // tell the searcher to draw itself in linear mode
                drawOptions.setDrawMode(google.search.SearchControl.DRAW_MODE_TABBED);
                // tell the searcher to draw itself and tell it where to attach
                searchControl.draw(document.getElementById("searchcontrol"), drawOptions);
                // execute an inital search
                searchControl.execute(search_query);
            } else if (api_type == 'google_docs') {
                //console.log("WERE HERE AND NEWKEY IS " + item['some_new_thing']);
                var document_link = item['doc_link'];
                if (document_link == undefined) {
                    $('.room-layout-table').append('<div class="render-spot" id=' + render_item_id + '>' + '  <div class="calendar-border"> <h1 class="calendar-title" style = "margin-bottom: 22px;">' + user_name + '\'s Google Document</h1> <a class="glyphicon glyphicon-remove" id="remove_item_id"></a>' + '<iframe class="calendar-frame" src=' + "/custom_404" + ' style=" border-width:0 " width="800" height="600" frameborder="0" scrolling="no"></iframe></div>' + '</div>');
                } else {
                    $('.room-layout-table').append('<div class="render-spot" id=' + render_item_id + '>' + '  <div class="calendar-border"> <h1 class="calendar-title" style = "margin-bottom: 22px;">' + user_name + '\'s Google Document</h1> <a class="glyphicon glyphicon-remove" id="remove_item_id"></a>' + '<iframe class="calendar-frame" src=' + document_link + ' style=" border-width:0 " width="800" height="600" frameborder="0" scrolling="no"></iframe></div>' + '</div>');
                }
            } else if (api_type == 'google_drawings') {
                //console.log("WERE HERE AND NEWKEY IS " + item['some_new_thing']);
                var document_link = item['doc_link'];
                $('.room-layout-table').append('<div class="render-spot" id=' + render_item_id + '>' + '  <div class="calendar-border"> <h1 class="calendar-title" style = "margin-bottom: 22px;">' + user_name + '\'s Google Drawing</h1> <a class="glyphicon glyphicon-remove" id="remove_item_id"></a>' + '<iframe class="calendar-frame" src=' + document_link + ' style=" border-width:0 " width="800" height="600" frameborder="0" scrolling="no"></iframe></div>' + '</div>');
            } else if (api_type == 'wikipedia') {
                console.log("room center renders html: ", item['api_html']);
                // adds the word render to the unique id of the div based on
                // the info stored in its redis key
                var render_item_id = "render" + div_id;
                api_html = item['api_html'];
                var query = item['query'];
                // these two lines makes sure the space added before the apostrophes
                // from nltk is removed
                query = query.split(" '").join("'");
                query = query.split(" \u0027").join("'");
                // this is the raw html for the wiki render spot containing
                // the border, the iframe, and the remove x glyph
                var wikidiv = '<div class="render-spot" id=' + render_item_id + '>' + '  <div class="wikipedia-border"> <a class="glyphicon glyphicon-remove wikipedia-remove" id="remove_item_id"></a>' + '<iframe id="wikipedia-iframe" style=" border-width:0" width="609" height="500" max-height="470" position="relative" ' + ' top="11" left="-3" frameborder="0"></iframe></div>' + '</div>';
                // appends the wikidiv to the room layout table.
                // this makes it appear in the center of the page
                $('.room-layout-table').append(wikidiv);
                $('#wikipedia-iframe').contents().find('html').html(api_html);
            } else if (api_type == 'wolfram') {
                // adds the word render to the unique id of the div based on
                // the info stored in its redis key
                var render_item_id = "render" + div_id;
                api_html = item['api_html'];
                var query = item['query'];
                // these two lines makes sure the space added before the apostrophes
                // from nltk is removed
                query = query.split(" '").join("'");
                query = query.split(" \u0027").join("'");
                // this is the raw html for the wolfram render spot containing
                // the border, the iframe, and the remove x glyph
                var wolframdiv = '<div class="render-spot" id=' + render_item_id + '>' + '  <div class="wolfram-border"> <a class="glyphicon glyphicon-remove wolfram-remove" id="remove_item_id"></a>' + '<iframe id="wolfram-iframe" style=" border-width:0" width="609" height="500" max-height="470" position="relative" ' + ' top="11" left="-3" frameborder="0"></iframe></div>' + '</div>';
                // appends the wolframdiv to the room layout table.
                // this makes it appear in the center of the page
                $('.room-layout-table').append(wolframdiv);
                $('#wolfram-iframe').contents().find('html').html(api_html);
                $('#wolfram-iframe').contents().find('body').prepend('<form action="#"><fieldset id="input" class="wolfram-text-box"' + ' style="position: relative;margin-bottom: 48px;margin-top: 10px;"><input id="i" name="i" maxlength="200"' + ' type="text" autocomplete="off" value="' + query + '" class=""><input id="dataset-input" name="dataset" ' + 'value="" type="hidden"><div id="imath" style="display: none;"><div class="im" style="display: none;"> ' + '</div><div class="ac"></div><ul class="moreInput">       <li class="inputtab inputtab-keyboard" data-tab="keyboard">' + '<a href="#"></a>       </li><li class="inputtab inputtab-images" data-tab="images"><a href="#"></a>   ' + '      </li><li class="inputtab inputtab-datainput" data-tab="datainput"><a href="#"></a>   ' + '     </li><li class="inputtab inputtab-genfiles" data-tab="genfiles"><a href="#"></a>   ' + '  </li></ul></div><noscript>&amp;lt;input type="hidden" name="asynchronous" value="false" /&amp;gt;</noscript> ' + ' <a id="star-inputfield" class="star-input star-disabled" href="#" style="display: none;"></a><div id="equal" title="compute"></div></fieldset></form>');
                // this prepends the title/logo to the body of the iframe
                $('#wolfram-iframe').contents().find('body').prepend('<div id="logo-wrapper" class="ir normalLogo"><a href="/" class="ir normalLogo" id="logo" title="Wolfram|Alpha Computational Knowledge Engine">Wolfram|Alpha Computational Knowledge Engine</a></div>');
                // dynamically adds the css to the elements in the iframe,
                // first taking wolfram's css from their page
                // note: this has to be dynamic, because our styling does not
                // apply to these elements (iframe bs)
                if (location.host === "benedictation.io") {
                    $('#wolfram-iframe').contents().find('head').html('<%= stylesheet_link_tag "wolfram_css.css" %>');
                } else {
                    $('#wolfram-iframe').contents().find('head').html('<%= stylesheet_link_tag "#{Rails.root}/vendor/assets/stylesheets/wolfram_css.css" %>');
                }
                $('#wolfram-iframe').contents().find('#logo-wrapper').css('top', '4px');
                $('#wolfram-iframe').contents().find('#logo-wrapper').css('position', 'relative');
                $('#wolfram-iframe').contents().find('html').css('min-width', '300px');
                $('#wolfram-iframe').contents().find('html').css('width', '584px');
                $('#wolfram-iframe').contents().find('body').css('min-width', '300px');
                $('#wolfram-iframe').css('position', 'relative');
                $('#wolfram-iframe').css('max-height', '471px');
                $('#wolfram-iframe').css('top', '10px');
                $('#wolfram-iframe').css('left', '-3px');
                // this disables all links within the wolfram div so that we do not have
                // any redirects from our iframe
                $('#wolfram-iframe').contents().find('a').click(function(event) {
                    event.preventDefault();
                });
                // this is a function that listens for the enter key press within the
                // text-box and then calls the wolfram_text function (explained below)
                $('#wolfram-iframe').contents().find('.wolfram-text-box').keydown(function(event) {
                    var keypressed = event.keyCode || event.which;
                    if (keypressed == 13) {
                        wolfram_text(render_item_id);
                    }
                });
                // this is the function that listens for the equal submit button to be
                // clicked within the text-box and then calls the wolfram_text function
                // (explained below), note:  this is an alternative to pressing enter
                $('#wolfram-iframe').contents().find('#equal').click(function() {
                    wolfram_text(render_item_id);
                });
            }
        }
    });
}
// This function is called to simulate a wolfram request in the text box,
// it removes the original iframe, replaces it with a loading gif,
// and then rerenders the new query in the same spot
// This function is called to simulate a wolfram request in the text box,
// it removes the original iframe, replaces it with a loading gif,
// and then rerenders the new query in the same spot
function wolfram_text(render_item_id) {
    // this creates a JSON object where we change the query from the original query from benny
    // to the one entered in the text box
    var myData = '{"api_type": "wolfram", "query": "' + $('#wolfram-iframe').contents().find('.wolfram-text-box').children().val() + '"}';
    var myData = JSON.parse(myData);
    // we remove the wolfram iframe so that we can process the next query
    $('#wolfram-iframe').remove();
    // this is the raw html for the wolfram render spot containing
    // the border, the iframe, and the remove x glyph
    var wolframdiv = '<div class="render-spot" id=' + render_item_id + '>' + '  <div class="wolfram-border"> <a class="glyphicon glyphicon-remove wolfram-remove" id="remove_item_id"></a>' + '<iframe id="wolfram-iframe" style=" border-width:0" width="609" height="500" max-height="470" position="relative" ' + ' top="11" left="-3" frameborder="0"></iframe></div>' + '</div>'
    // appends the wolframdiv to the room layout table.
    // this makes it appear in the center of the page
    $('.room-layout-table').append(wolframdiv);
    // adds the loading gif to the iframe body so that it lets the user know
    // info is being crunched on the backend
    $('#wolfram-iframe').contents().find('body').prepend('<%= image_tag("computing.gif", class: "wolfram-loading") %>');
    //this adds in the wolfram loading glyph css
    $('#wolfram-iframe').contents().find('.wolfram-loading').css('position', 'relative');
    $('#wolfram-iframe').contents().find('.wolfram-loading').css('left', '268px');
    $('#wolfram-iframe').contents().find('.wolfram-loading').css('top', '135px');
    $('#wolfram-iframe').contents().find('.wolfram-loading').css('transform', 'scale(3.0)');
    // this prepends the text box to the body of the iframe (whose text we highjack *teehee*)
    $('#wolfram-iframe').contents().find('body').prepend('<form action="#"><fieldset id="input" class="wolfram-text-box"' + ' style="position: relative;margin-bottom: 48px;margin-top: 10px;"><input id="i" name="i" maxlength="200"' + ' type="text" autocomplete="off" value="' + myData["query"] + '" class=""><input id="dataset-input" name="dataset" ' + 'value="" type="hidden"><div id="imath" style="display: none;"><div class="im" style="display: none;"> ' + '</div><div class="ac"></div><ul class="moreInput">       <li class="inputtab inputtab-keyboard" data-tab="keyboard">' + '<a href="#"></a>       </li><li class="inputtab inputtab-images" data-tab="images"><a href="#"></a>   ' + '      </li><li class="inputtab inputtab-datainput" data-tab="datainput"><a href="#"></a>   ' + '     </li><li class="inputtab inputtab-genfiles" data-tab="genfiles"><a href="#"></a>   ' + '  </li></ul></div><noscript>&amp;lt;input type="hidden" name="asynchronous" value="false" /&amp;gt;</noscript> ' + ' <a id="star-inputfield" class="star-input star-disabled" href="#" style="display: none;"></a><div id="equal" title="compute"></div></fieldset></form>');
    // this prepends the title/logo to the body of the iframe
    $('#wolfram-iframe').contents().find('body').prepend('<div id="logo-wrapper" class="ir normalLogo"><a href="/" class="ir normalLogo" id="logo" title="Wolfram|Alpha Computational Knowledge Engine">Wolfram|Alpha Computational Knowledge Engine</a></div>');
    // dynamically adds the css to the elements in the iframe,
    // first taking wolfram's css from their page
    // note: this has to be dynamic, because our styling does not
    // apply to these elements (iframe bs)
    if (location.host === "benedictation.io") {
        $('#wolfram-iframe').contents().find('head').html('<%= stylesheet_link_tag "wolfram_css.css" %>');
    } else {
        $('#wolfram-iframe').contents().find('head').html('<%= stylesheet_link_tag "#{Rails.root}/vendor/assets/stylesheets/wolfram_css.css" %>');
    }
    $('#wolfram-iframe').contents().find('#logo-wrapper').css('top', '4px');
    $('#wolfram-iframe').contents().find('#logo-wrapper').css('position', 'relative');
    $('#wolfram-iframe').contents().find('html').css('min-width', '300px');
    $('#wolfram-iframe').contents().find('html').css('width', '584px');
    $('#wolfram-iframe').contents().find('body').css('min-width', '300px');
    $('#wolfram-iframe').css('position', 'relative');
    $('#wolfram-iframe').css('max-height', '471px');
    $('#wolfram-iframe').css('top', '10px');
    $('#wolfram-iframe').css('left', '-3px');
    // this disables all links within the wolfram div so that we do not have
    // any redirects from our iframe
    $('#wolfram-iframe').contents().find('a').click(function(event) {
        event.preventDefault();
    });
    // this is an AJAX RESTful POST request that is routed
    // through the URL "/check_api" through the rooms
    // controller to the function 'api_help', which calls
    // 'check_api' in the rooms helper.  The object passed in
    // is JSON object containing the wolfram query, and api_type
    $.ajax({
        type: "POST",
        url: "/check_api",
        data: {
            jsonData: JSON.stringify(myData)
        },
        success: function(wolfram_json) {
            // add wolfram html to the json object so that we can render the text
            // box results on the same page
            query = wolfram_json['query'];
            wolfram_html = wolfram_json['api_html'];
            // these two lines makes sure the space added before the apostrophes
            // from nltk is removed
            query = query.split(" '").join("'");
            query = query.split(" \u0027").join("'");
            // this is the raw html for the wolfram render spot containing
            // the border, the iframe, and the remove x glyph
            var wolframdiv = '<div class="render-spot" id=' + render_item_id + '>' + '  <div class="wolfram-border"> <a class="glyphicon glyphicon-remove wolfram-remove" id="remove_item_id"></a>' + '<iframe id="wolfram-iframe" style=" border-width:0" width="609" height="500" max-height="470" position="relative" top="11" left="-3" frameborder="0"></iframe></div>' + '</div>'
            // we remove the wolfram iframe so that we can process the next query
            // or in this particular case, removes the loading gif
            $('#wolfram-iframe').remove();
            // appends the wolframdiv to the room layout table.
            // this makes it appear in the center of the page
            $('.room-layout-table').append(wolframdiv);
            // appends the raw wolfram html to the iframe
            // notice this is the syntax we use and will have to use throughout
            // in order to change the contents of an iframe after instantiation
            $('#wolfram-iframe').contents().find('html').html(wolfram_html);
            // this prepends the text box to the body of the iframe (whose text we highjack *teehee*)
            $('#wolfram-iframe').contents().find('body').prepend('<form action="#"><fieldset id="input" class="wolfram-text-box"' + ' style="position: relative;margin-bottom: 48px;margin-top: 10px;"><input id="i" name="i" maxlength="200"' + ' type="text" autocomplete="off" value="' + query + '" class=""><input id="dataset-input" name="dataset" ' + 'value="" type="hidden"><div id="imath" style="display: none;"><div class="im" style="display: none;"> ' + '</div><div class="ac"></div><ul class="moreInput">       <li class="inputtab inputtab-keyboard" data-tab="keyboard">' + '<a href="#"></a>       </li><li class="inputtab inputtab-images" data-tab="images"><a href="#"></a>   ' + '      </li><li class="inputtab inputtab-datainput" data-tab="datainput"><a href="#"></a>   ' + '     </li><li class="inputtab inputtab-genfiles" data-tab="genfiles"><a href="#"></a>   ' + '  </li></ul></div><noscript>&amp;lt;input type="hidden" name="asynchronous" value="false" /&amp;gt;</noscript> ' + ' <a id="star-inputfield" class="star-input star-disabled" href="#" style="display: none;"></a><div id="equal" title="compute"></div></fieldset></form>');
            // this prepends the title/logo to the body of the iframe
            $('#wolfram-iframe').contents().find('body').prepend('<div id="logo-wrapper" class="ir normalLogo"><a href="/" class="ir normalLogo" id="logo" title="Wolfram|Alpha Computational Knowledge Engine">Wolfram|Alpha Computational Knowledge Engine</a></div>');
            // dynamically adds the css to the elements in the iframe,
            // first taking wolfram's css from their page
            // note: this has to be dynamic, because our styling does not
            // apply to these elements (iframe bs)
            if (location.host === "benedictation.io") {
                $('#wolfram-iframe').contents().find('head').html('<%= stylesheet_link_tag "wolfram_css.css" %>');
            } else {
                $('#wolfram-iframe').contents().find('head').html('<%= stylesheet_link_tag "#{Rails.root}/vendor/assets/stylesheets/wolfram_css.css" %>');
            }
            $('#wolfram-iframe').contents().find('#logo-wrapper').css('top', '4px');
            $('#wolfram-iframe').contents().find('#logo-wrapper').css('position', 'relative');
            $('#wolfram-iframe').contents().find('html').css('min-width', '300px');
            $('#wolfram-iframe').contents().find('html').css('width', '584px');
            $('#wolfram-iframe').contents().find('body').css('min-width', '300px');
            $('#wolfram-iframe').css('position', 'relative');
            $('#wolfram-iframe').css('max-height', '471px');
            $('#wolfram-iframe').css('top', '10px');
            $('#wolfram-iframe').css('left', '-3px');
            // this disables all links within the wolfram div so that we do not have
            // any redirects from our iframe
            $('#wolfram-iframe').contents().find('a').click(function(event) {
                event.preventDefault();
            });
            // this is a function that listens for the enter key press within the
            // text-box and then calls the wolfram_text function (explained below)
            $('#wolfram-iframe').contents().find('.wolfram-text-box').keydown(function(event) {
                var keypressed = event.keyCode || event.which;
                if (keypressed == 13) {
                    wolfram_text(render_item_id);
                }
            });
            // this is the function that listens for the equal submit button to be
            // clicked within the text-box and then calls the wolfram_text function
            // (explained below), note:  this is an alternative to pressing enter
            $('#wolfram-iframe').contents().find('#equal').click(function() {
                wolfram_text(render_item_id);
            });
        }
    });
} <% end %>